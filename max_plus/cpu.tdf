INCLUDE "mem.inc";
INCLUDE "ip.inc";
INCLUDE "bus_controller.inc";
INCLUDE "acc_controller.inc";
INCLUDE "operational_block.inc";
INCLUDE "logical_block.inc";
INCLUDE "accumulator.inc";
INCLUDE "ir.inc";
INCLUDE "mcu.inc";
SUBDESIGN cpu
(
	clk : INPUT;
	acc[11..0], mem_out[11..0], bus[11..0], ir_out[11..0], ip_oww, out[11..0], ready : OUTPUT;
)

VARIABLE
	main_bus[11..0] : NODE;
	
	cpu_mem : mem;
	cpu_ip : ip;
	cpu_bus : bus_controller;
	cpu_acc_c : acc_controller;
	cpu_ob : operational_block;
	cpu_lb : logical_block;
	cpu_acc : accumulator;
	cpu_ir : ir;

	cpu_mcu : mcu;

BEGIN

ready = cpu_mcu.print_acc;
out[] = cpu_acc.out[] & cpu_mcu.print_acc;

acc[] = cpu_acc.out[];
mem_out[] = cpu_mem.out[];
bus[] = main_bus[];
ir_out[] = cpu_ir.out[];

ip_oww = cpu_mcu.ip_overwrite;

% Clock signals: %
cpu_mem.clk = clk;
cpu_ip.clk = clk;
cpu_acc.clk = clk;
cpu_ir.clk = clk;
cpu_mcu.clk = clk;

% Bus controller set up: %
cpu_bus.from_ip[7..0] = cpu_ip.address[];
cpu_bus.from_ip[11..8] = (VCC, VCC, VCC, VCC);
cpu_bus.from_mem[] = cpu_mem.out[];
cpu_bus.from_ir[] = cpu_ir.out[];

cpu_acc_c.from_bus[] = main_bus[];
cpu_acc_c.from_ob[] = cpu_ob.q[];
cpu_acc_c.from_lb[] = cpu_lb.q[];

cpu_bus.in[] = cpu_mcu.bus_controller_in[];
cpu_acc_c.in[] = cpu_mcu.acc_controller_in[];
main_bus[] = cpu_bus.main_bus[];

% Memory: %
cpu_mem.write = cpu_mcu.memory_write;
cpu_mem.address[] = main_bus[7..0];
cpu_mem.in[] = cpu_acc.out[];
% Instruction Pointer: %
cpu_ip.enabled = cpu_mcu.ip_enabled;
cpu_ip.overwrite = cpu_mcu.ip_overwrite;
cpu_ip.in[] = main_bus[7..0];
% Operational block: %
cpu_ob.operator[] = cpu_mcu.operator_code[];
cpu_ob.a[] = cpu_acc.out[];
cpu_ob.b[] = main_bus[];
% Logical block: %
cpu_lb.operator[] = cpu_mcu.operator_code[];
cpu_lb.a[] = cpu_acc.out[];
cpu_lb.b[] = main_bus[];
% Accumulator: %
cpu_acc.enabled = cpu_mcu.accumulator_enabled;
cpu_acc.in[] = cpu_acc_c.out[];
% Instruction Register: %
cpu_ir.enabled = cpu_mcu.ir_enabled;
cpu_ir.in[] = main_bus[];

% MCU: %
cpu_mcu.cop[] = cpu_ir.out[11..8];
cpu_mcu.boolean = cpu_acc.boolean;

END;
